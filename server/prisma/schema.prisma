// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String     @id @default(nanoid())
  username     String
  email        String
  passwordHash String
  messages     Message[]  @relation("MessagesByUser")
  Receiver     Receiver[]
}

model Receiver {
  id        String  @id @default(nanoid())
  user      User?   @relation(fields: [userId], references: [id])
  userId    String?
  group     Group?  @relation(fields: [groupId], references: [id])
  groupId   String?
  message   Message @relation(fields: [messageId], references: [id])
  messageId String
}

model Group {
  id       String     @id @default(nanoid())
  messages Message[]  @relation("MessagesByGroup") // Relation is named here
  Receiver Receiver[]
}

model Message {
  id        String     @id @default(nanoid())
  createdAt DateTime   @default(now())
  text      String
  senderId  String
  sender    User       @relation("MessagesByUser", fields: [senderId], references: [id])
  groupId   String?
  group     Group?     @relation("MessagesByGroup", fields: [groupId], references: [id]) // Opposite relation field correctly named and linked
  Receiver  Receiver[]
}
